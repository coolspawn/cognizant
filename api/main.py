# generated by fastapi-codegen:
#   filename:  weather.yaml
#   timestamp: 2022-05-18T18:25:42+00:00

from __future__ import annotations

from datetime import date
from typing import Optional, Union

from fastapi import FastAPI, BackgroundTasks
from fastapi.middleware.cors import CORSMiddleware
from celery_app.celery_main import celery_instance

from models import (
    ApiV1HistoricalDataCapitalGetResponse,
    Capital,
    Cursor,
    Error,
    Limit,
    Agg,
)

app = FastAPI(
    title='Weather API',
    version='v1',
    servers=[{'url': 'http://127.0.0.1:8000'}],
)
app.add_middleware(
    CORSMiddleware,
    allow_origins=["*"],
    allow_methods=["*"],
    allow_headers=["*"],
    allow_credentials=True,
)


def celery_on_message(body):
    print(body)


def background_on_message(task):
    print(task.get(on_message=celery_on_message, propagate=False))


@app.get(
    '/api/v1/historical_data/{capital}',
    response_model=ApiV1HistoricalDataCapitalGetResponse,
    responses={'400': {'model': Error}},
)
async def get_api_v1_historical_data_capital(
        capital: Capital,
        background_task: BackgroundTasks,
        from_date: Optional[date] = None,
        till_date: Optional[date] = None,
        agg: Optional[Agg] = None,
        cursor: Optional[Cursor] = None,
        limit: Optional[Limit] = None,

) -> Union[ApiV1HistoricalDataCapitalGetResponse, Error]:
    task = celery_instance.send_task(
        "celery_app.worker.get_weather_data", args=[capital])
    print(task)
    background_task.add_task(background_on_message, task)
    return {"message": "No weather data yet"}
